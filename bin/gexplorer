#!/usr/bin/env python
import os
from argparse import ArgumentParser

import logging

import dotenv
import waitress

from indexclient.client import IndexClient

from explorer import app
from explorer import mocks


def parse_args():

    parser = ArgumentParser(description="Graph Explorer script")
    parser.add_argument("-p", "--port",
                        help="HTTP port to listen on", required=False, type=int, default=19891)
    parser.add_argument("-d", "--demo", help="Starts the server in demo mode", action="store_true")
    parser.add_argument("--seed", help="GraphML seed data to add to database", type=str)
    
    subparser = parser.add_subparsers()

    # starts services
    start = subparser.add_parser("start", help="Start the server")
    start.add_argument("-t", "--threads",
                       help="thread pool size",
                       default=4, type=int)
    start.set_defaults(action="start")
    return parser.parse_args()


def get_index_client():
    return IndexClient(baseurl=os.environ.get("INDEXD_URL", "http://indexd.service.consul/"),
                       auth=(os.environ.get("INDEXD_USER"), os.environ.get("INDEXD_PWD")))


def main():
    dotenv.load_dotenv(verbose=True)
    logger = logging.getLogger('waitress')
    logger.setLevel(logging.INFO)

    args = parse_args()
    
    action = args.action
    if action == "start":
        flask_app = app.make_app()

        # init mock data
        if args.demo:
            mocks.make_data(args.seed, flask_app.db)
        waitress.serve(flask_app, host="0.0.0.0", port=args.port, threads=args.threads, expose_tracebacks=True)
    else:
        raise NotImplementedError("Unsupported command {}", action)


if __name__ == '__main__':
    main()
